{"version":3,"sources":["components/Title/Title.styles.js","components/Title/Title.jsx","components/List/List.styles.js","components/Input/Input.styles.js","components/Input/Input.jsx","components/DataBlock/DateBlock.styles.js","components/DataBlock/DateBlock.jsx","components/TaskChanger/TaskChanger.styles.js","components/TaskChanger/TaskChanger.jsx","components/TaskWrapper/TaskWrapper.styles.js","components/TaskWrapper/TaskWrapper.jsx","components/Task/Task.styles.js","components/Task/Task.jsx","store/types.js","store/actions.js","components/FilterBlock/FilterBlock.styles.js","components/FilterBlock/FilterBlock.jsx","components/RemoveTasksBlock/RemoveTasksBlock.styles.js","components/RemoveTasksBlock/RemoveTasksBlock.jsx","components/List/List.jsx","App.js","store/reducers.js","store/rootReducer.js","store/store.js","index.js"],"names":["StyledTitle","styled","h1","Title","ListWrapper","div","TasksList","MyButton","button","InputBlock","StyledInput","input","AddButton","Input","addTodo","useState","value","setValue","addTodoInList","trim","length","type","onChange","e","target","onKeyDown","key","placeholder","onClick","Block","Date","h3","RemoveButton","ChangeButton","props","Color","DateBlock","task","changeValueTodo","removeTodo","date","change","id","Changer","SaveButton","ChangeText","textarea","TaskChanger","changeTodo","setText","defaultValue","text","wrap","rows","Wrapper","TaskText","Completed","TaskWrapper","isCompleted","TaskBlock","Task","ADD_TASK","REMOVE_ALL_TASKS","REMOVE_TASK","CHANGE_TASK","FILTER_ALL","FILTER_IS_COMPLETED","FILTER_IS_NOT_COMPLETED","filterAll","filterIsCompleted","filterIsNotCompleted","Filters","FilterButton","color","FilterBlock","flag","useSelector","state","todos","dispatch","useDispatch","RemoveTasksButton","RemBlock","RemoveTasksBlock","todoList","List","sortedList","useEffect","localStorage","clear","setItem","JSON","stringify","removeTask","filterTodo","changeTask","addTask","map","item","App","className","initialState","localTodo","parse","getItem","rootReducer","combineReducers","action","todo","getTime","toLocaleString","filter","store","createStore","compose","window","devToolsExtension","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.388ce3db.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1`\n    font-famili: \"Roboto\", sans-serif;\n    font-weight: 700;\n    font-size: 3rem;\n    text-align: center;\n    margin-top 30px;\n    color: #A9A9A9;\n    text-shadow: 5px 5px 10px black;\n`;\n","import {StyledTitle} from \"./Title.styles\";\n\nexport const Title = () => {\n  return <StyledTitle>Todo list</StyledTitle>;\n};\n","import styled from \"styled-components\";\n\nexport const ListWrapper = styled.div``;\nexport const TasksList = styled.div``;\n\n\nexport const MyButton = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: 5px 15px;\n  font-size: 20px;\n  background: transparent;\n  background-color: orange;\n  box-shadow: 0 0 10px 2px black;\n  border: none;\n  border-radius: 50px;\n`;\n\n\n\n","import styled from \"styled-components\";\nimport {MyButton} from \"../List/List.styles\";\n\nexport const InputBlock = styled.div`\n    display: flex;\n      \n`;\n\nexport const StyledInput = styled.input`\n    width: 100%;\n    padding: 10px 15px;\n    margin-top: 30px;\n    border-radius: 30px;\n    box-shadow: 0 0 10px 5px black;\n    outline: none;\n`;\n\nexport const AddButton = styled(MyButton)`\n    margin: 30px auto 0 10px;\n`;\n","import {useState} from \"react\";\nimport {AddButton, InputBlock, StyledInput} from \"./Input.styles\";\n\nexport const Input = ({addTodo}) => {\n  const [value, setValue] = useState(\"\");\n\n  const addTodoInList = () => {\n    if (value.trim().length) {\n      addTodo(value);\n      setValue(\"\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    if (e.key === \"Enter\") {\n      addTodoInList();\n    }\n  };\n\n  return (\n    <InputBlock>\n      <StyledInput\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        onKeyDown={handleSubmit}\n        placeholder=\"Введи задачу\"\n      />\n      <AddButton onClick={addTodoInList}><h3>+</h3></AddButton>\n    </InputBlock>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Block = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Date = styled.h3`\n  color: orange;\n  margin: 15px 0 5px 15px;\n  width: auto;\n  text-shadow: 1px 1px 2px black;\n`;\n\nexport const RemoveButton = styled.button`\n  background-color: orange;\n  border: none;\n  padding: 5px 10px;\n  margin: 15px 15px 0 0;\n  box-shadow: 0 0 10px 3px black;\n  border-radius: 50px;\n`;\n\nexport const ChangeButton = styled(RemoveButton)`\n  ${(props) => props.Color};\n`;","import {ChangeButton, Date, Block, RemoveButton} from \"./DateBlock.styles\";\n\nexport const DateBlock = ({task, changeValueTodo, removeTodo}) => {\n  return (\n    <Block>\n      <Date>{task.date}</Date>\n      <div>\n\n        {task.change ?\n          (<ChangeButton\n            onClick={() => changeValueTodo(task.id, 'change')}\n            Color={\"background-color: red;\"}>ред.\n          </ChangeButton>) :\n          (<ChangeButton onClick={() => changeValueTodo(task.id, 'change')}>ред.</ChangeButton>)}\n\n        <RemoveButton onClick={() => removeTodo(task.id)}>x</RemoveButton>\n      </div>\n    </Block>\n  )\n}\n","import styled from \"styled-components\";\nimport {RemoveButton} from \"../DataBlock/DateBlock.styles\";\n\nexport const Changer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 15px 0;\n`;\n\nexport const SaveButton = styled(RemoveButton)`\n  margin: 15px 0 0 0;;\n`;\n\nexport const ChangeText = styled.textarea`\n  margin: 15px 15px 0 15px;\n  padding: 5px;\n  background-color: #a9a9a9;\n  width: 95%;\n  color: black;\n  border: none;\n  resize: none;\n`;","import {Changer, ChangeText, SaveButton} from \"./TaskChanger.styles\";\n\nexport const TaskChanger = ({changeTodo, task, setText}) => {\n\nreturn (\n  <Changer>\n    <ChangeText\n      defaultValue={task.text}\n      onChange={(e) => setText(e.target.value)}\n      type=\"text\"\n      wrap=\"hard\"\n      rows=\"3\"\n    />\n    <SaveButton onClick={changeTodo}>Сохранить</SaveButton>\n  </Changer>\n)\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 15px;\n  // margin: 5px 0;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TaskText = styled.h3`\n  ${(props) => props.Completed};\n  word-break: break-word;\n  white-space: pre-line;\n  hyphens: auto;\n`;","import {TaskText, Wrapper} from \"./TaskWrapper.styles\";\n\nexport const TaskWrapper = ({task, changeValueTodo}) => {\n  return (\n    <Wrapper onClick={() => changeValueTodo(task.id, 'isCompleted')}>\n      {task.isCompleted ? (\n        <TaskText Completed={\"text-decoration: line-through;\"}>\n          {task.text}\n        </TaskText>\n      ) : (\n        <TaskText>{task.text}</TaskText>\n      )}\n    </Wrapper>\n  )\n};","import styled from \"styled-components\";\n\nexport const TaskBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: space-around;\n  margin: 0 0 30px 0;\n  box-shadow: 0 0 10px 5px black;\n  background-color: #a9a9a9;\n  border-radius: 30px;\n`;\n\n\n\n","import {useState} from \"react\";\nimport {DateBlock} from \"../DataBlock/DateBlock\";\nimport {TaskChanger} from \"../TaskChanger/TaskChanger\";\nimport {TaskWrapper} from \"../TaskWrapper/TaskWrapper\";\nimport {\n  TaskBlock,\n} from \"./Task.styles\";\n\nexport const Task = ({task, removeTodo, changeValueTodo}) => {\n  const [text, setText] = useState(task.text);\n\n  const changeTodo = () => {\n    if (text.trim().length) {\n      changeValueTodo(task.id, 'change', text);\n      setText(\"\");\n    }\n  };\n\n  return (\n    <TaskBlock>\n      <DateBlock\n        task={task}\n        removeTodo={removeTodo}\n        changeValueTodo={changeValueTodo}>\n      </DateBlock>\n\n      {task.change ? (\n        <TaskChanger\n          changeTodo={changeTodo}\n          task={task}\n          setText={setText}>\n        </TaskChanger>\n      ) : (\n        <TaskWrapper\n          onClick={() => changeValueTodo(task.id, 'isCompleted')}\n          task={task}\n          changeValueTodo={changeValueTodo}>\n        </TaskWrapper>\n      )}\n    </TaskBlock>\n  );\n};\n","export const ADD_TASK = 'ADD_TASK'\nexport const REMOVE_ALL_TASKS = 'REMOVE_ALL_TASKS'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const CHANGE_TASK = 'CHANGE_TASK'\nexport const FILTER_ALL = 'FILTER_ALL'\nexport const FILTER_IS_COMPLETED = 'FILTER_IS_COMPLETED'\nexport const FILTER_IS_NOT_COMPLETED = 'FILTER_IS_NOT_COMPLETED'","import {\n  ADD_TASK,\n  CHANGE_TASK,\n  FILTER_ALL,\n  FILTER_IS_COMPLETED,\n  FILTER_IS_NOT_COMPLETED,\n  REMOVE_ALL_TASKS,\n  REMOVE_TASK\n} from \"./types\";\n\nexport const addTask = (text) => ({\n  type: ADD_TASK,\n  text,\n});\n\nexport const changeTask = (id, value, text) => ({\n  type: CHANGE_TASK,\n  id,\n  value,\n  text\n})\n\nexport const removeTask = (id) => ({\n  type: REMOVE_TASK,\n  id\n})\n\nexport const removeAllTask = () => ({\n  type: REMOVE_ALL_TASKS\n})\n\nexport const filterAll = () => ({\n  type: FILTER_ALL\n})\n\nexport const filterIsCompleted = () => ({\n  type: FILTER_IS_COMPLETED\n})\n\nexport const filterIsNotCompleted = () => ({\n  type: FILTER_IS_NOT_COMPLETED\n})\n\n","import styled from \"styled-components\";\nimport {MyButton} from \"../List/List.styles\";\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FilterButton = styled(MyButton)`\n  margin: 30px 10px;\n  ${(props) => props.color};\n`;","import {filterAll, filterIsCompleted, filterIsNotCompleted} from \"../../store/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FilterButton, Filters} from \"./FilterBlock.styles\";\n\nexport const FilterBlock = () => {\n  const flag = useSelector((state) => state.todos.flag)\n  const dispatch = useDispatch()\n\n  return (\n    <Filters>\n      {flag === \"FILTER_IS_COMPLETED\" ?\n        <FilterButton\n          onClick={() => dispatch(filterIsCompleted())}\n          color={\"background-color: red;\"}>\n          Сделано\n        </FilterButton> :\n        <FilterButton onClick={() => dispatch(filterIsCompleted())}>\n          Сделано\n        </FilterButton>\n      }\n\n      {/*<FilterButton*/}\n      {/*  onClick={() => dispatch(filterIsCompleted())}*/}\n      {/*  {flag == \"FILTER_IS_COMPLETED\" && color = {\"background-color: red;\"}}>*/}\n      {/*  Сделано*/}\n      {/*</FilterButton>*/}\n\n      {flag === \"FILTER_ALL\" ?\n        <FilterButton\n          onClick={() => dispatch(filterAll())}\n          color={\"background-color: red;\"}>\n          Всё\n        </FilterButton> :\n        <FilterButton\n          onClick={() => dispatch(filterAll())}>\n          Всё\n        </FilterButton>\n      }\n\n      {flag === \"FILTER_IS_NOT_COMPLETED\" ?\n        <FilterButton\n          onClick={() => dispatch(filterIsNotCompleted())}\n          color={\"background-color: red;\"}>\n          Ожидает\n        </FilterButton> :\n        <FilterButton\n          onClick={() => dispatch(filterIsNotCompleted())}>\n          Ожидает\n        </FilterButton>\n      }\n    </Filters>\n  )\n};","import styled from \"styled-components\";\nimport {MyButton} from \"../List/List.styles\";\n\nexport const RemoveTasksButton = styled(MyButton)`\n  margin-bottom: 30px;\n`;\n\nexport const RemBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;","import {removeAllTask} from \"../../store/actions\";\nimport {RemBlock, RemoveTasksButton} from \"./RemoveTasksBlock.styles\";\nimport {useDispatch} from \"react-redux\";\n\nexport const RemoveTasksBlock = ({todoList}) => {\n  const dispatch = useDispatch()\n  return (\n    <RemBlock>\n      {todoList.length > 1 &&\n        <RemoveTasksButton onClick={() => dispatch(removeAllTask())}>\n          Удалить всё\n        </RemoveTasksButton>\n      }\n    </RemBlock>\n  )\n};","import {useEffect} from \"react\";\nimport {ListWrapper, TasksList} from \"./List.styles\";\nimport {Input} from \"../Input/Input\";\nimport {Task} from \"../Task/Task\";\nimport {FilterBlock} from \"../FilterBlock/FilterBlock\";\nimport {RemoveTasksBlock} from \"../RemoveTasksBlock/RemoveTasksBlock\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addTask, changeTask, filterAll, filterIsCompleted, filterIsNotCompleted, removeTask} from \"../../store/actions\";\n\nexport const List = () => {\n  const todos = useSelector((state) => state.todos)\n  const todoList = todos.sortedList\n  const flag = todos.flag\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    localStorage.clear();\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  });\n\n  const addTodo = (text) => {\n    dispatch(addTask(text))\n    filterTodo()\n  };\n\n  const removeTodo = (id) => {\n    dispatch(removeTask(id))\n    filterTodo()\n  };\n\n  const changeValueTodo = (id, value, text) => {\n    dispatch(changeTask(id, value, text))\n    filterTodo()\n  };\n\n  const filterTodo = () => {\n    switch (flag) {\n      case \"FILTER_ALL\":\n        return dispatch(filterAll())\n      case \"FILTER_IS_COMPLETED\":\n        return dispatch(filterIsCompleted())\n      case \"FILTER_IS_NOT_COMPLETED\":\n        return dispatch(filterIsNotCompleted())\n      default:\n        return dispatch(filterAll())\n    }\n  }\n\n  return (\n    <ListWrapper>\n      <Input addTodo={addTodo}/>\n      <FilterBlock/>\n      <TasksList>\n        {todoList.map((item) => (\n          <Task\n            removeTodo={removeTodo}\n            task={item}\n            changeValueTodo={changeValueTodo}\n            key={item.id}\n          />\n        ))}\n      </TasksList>\n      <RemoveTasksBlock todoList={todoList}/>\n    </ListWrapper>\n  );\n};\n","import {Title} from \"./components/Title/Title\";\nimport {List} from \"./components/List/List\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Title/>\n      <List/>\n    </div>\n  );\n}\n","import {\n  ADD_TASK,\n  CHANGE_TASK,\n  FILTER_ALL,\n  FILTER_IS_COMPLETED,\n  FILTER_IS_NOT_COMPLETED,\n  REMOVE_ALL_TASKS,\n  REMOVE_TASK\n} from './types';\n\nconst initialState = () => {\n  const localTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  if (localTodo === null) {\n    return {\n      todoList: [],\n      sortedList: [],\n      flag: FILTER_ALL\n    };\n  } else {\n    return localTodo;\n  }\n};\n\nexport const todoReducer = (state = initialState(), action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      const todo = {\n        id: new Date().getTime(),\n        date: new Date().toLocaleString(),\n        text: action.text,\n        isCompleted: false,\n        change: false,\n      }\n      return {\n        ...state,\n        todoList: [...state.todoList, todo],\n      }\n\n    case REMOVE_ALL_TASKS:\n      return {\n        ...state,\n        todoList: [],\n        sortedList: [],\n      }\n\n    case REMOVE_TASK:\n      return {\n        ...state,\n        todoList: state.todoList.filter((task) => task.id !== action.id),\n      }\n\n    case CHANGE_TASK:\n      return {\n        ...state,\n        todoList: state.todoList.map((task) =>\n          task.id === action.id && action.text\n            ? {...task, [action.value]: !task[action.value], text: action.text}\n            : task.id === action.id\n              ? {...task, [action.value]: !task[action.value]}\n              : {...task}\n        )\n      }\n\n    case FILTER_ALL:\n      return {\n        ...state,\n        sortedList: state.todoList,\n        flag: action.type\n      }\n\n    case FILTER_IS_COMPLETED:\n      return {\n        ...state,\n        sortedList: state.todoList.filter((task) => task.isCompleted),\n        flag: action.type\n      }\n\n    case FILTER_IS_NOT_COMPLETED:\n      return {\n        ...state,\n        sortedList: state.todoList.filter((task) => !task.isCompleted),\n        flag: action.type\n      }\n\n    default:\n      return state\n  }\n}\n\n\n","import {combineReducers} from \"redux\";\nimport {todoReducer} from \"./reducers\";\n\nexport const rootReducer = combineReducers({\n  todos: todoReducer,\n});","import {compose, createStore} from 'redux';\nimport {rootReducer} from \"./rootReducer\";\n\nexport const store = createStore(\n  rootReducer,\n  compose(window.devToolsExtension ? window.devToolsExtension() : (f) => f)\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport {Provider} from 'react-redux';\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}